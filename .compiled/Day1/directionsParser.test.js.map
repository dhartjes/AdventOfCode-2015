{"version":3,"sources":["../../src/Day1/directionsParser.test.js"],"names":["describe","it","expect","endingFloor","toBe","toBeGreaterThan","toBeLessThan","firstVisitsBasement"],"mappings":";;AAAA;;;;AAEAA,QAAQ,CAAC,mBAAD,EAAsB,MAAM;AAClCC,EAAAA,EAAE,CAAC,uBAAD,EAA0B,MAAM;AAChCC,IAAAA,MAAM,CAAC,+BAAI,GAAJ,EAASC,WAAV,CAAN,CAA6BC,IAA7B,CAAkC,CAAlC;AACD,GAFC,CAAF;AAIAH,EAAAA,EAAE,CAAC,wBAAD,EAA2B,MAAM;AACjCC,IAAAA,MAAM,CAAC,+BAAI,GAAJ,EAASC,WAAV,CAAN,CAA6BC,IAA7B,CAAkC,CAAC,CAAnC;AACD,GAFC,CAAF;AAIAH,EAAAA,EAAE,CAAC,wBAAD,EAA2B,MAAM;AACjCC,IAAAA,MAAM,CAAC,+BAAI,IAAJ,EAAUC,WAAX,CAAN,CAA8BC,IAA9B,CAAmC,CAAnC;AACD,GAFC,CAAF;AAIAH,EAAAA,EAAE,CAAC,2BAAD,EAA8B,MAAM;AACpCC,IAAAA,MAAM,CAAC,+BAAI,IAAJ,EAAUC,WAAX,CAAN,CAA8BC,IAA9B,CAAmC,CAAnC;AACD,GAFC,CAAF;AAIAH,EAAAA,EAAE,CAAC,8BAAD,EAAiC,MAAM;AACvCC,IAAAA,MAAM,CAAC,+BAAI,wBAAJ,EAA8BC,WAA/B,CAAN,CAAkDE,eAAlD,CAAkE,CAAlE;AACD,GAFC,CAAF;AAIAJ,EAAAA,EAAE,CAAC,8BAAD,EAAiC,MAAM;AACvCC,IAAAA,MAAM,CAAC,+BAAI,2BAAJ,EAAiCC,WAAlC,CAAN,CAAqDG,YAArD,CAAkE,CAAlE;AACD,GAFC,CAAF;AAIAL,EAAAA,EAAE,CAAC,yBAAD,EAA4B,MAAM;AAClCC,IAAAA,MAAM,CAAC,+BAAI,OAAJ,EAAaC,WAAd,CAAN,CAAiCC,IAAjC,CAAsC,CAAtC;AACD,GAFC,CAAF;AAIAH,EAAAA,EAAE,CAAC,0BAAD,EAA6B,MAAM;AACnCC,IAAAA,MAAM,CAAC,+BAAI,OAAJ,EAAaC,WAAd,CAAN,CAAiCC,IAAjC,CAAsC,CAAC,CAAvC;AACD,GAFC,CAAF;AAIAH,EAAAA,EAAE,CAAC,gCAAD,EAAmC,MAAM;AACzCC,IAAAA,MAAM,CAAC,+BAAI,GAAJ,EAASK,mBAAV,CAAN,CAAqCH,IAArC,CAA0C,CAA1C;AACD,GAFC,CAAF;AAIAH,EAAAA,EAAE,CAAC,gCAAD,EAAmC,MAAM;AACzCC,IAAAA,MAAM,CAAC,+BAAI,KAAJ,EAAWK,mBAAZ,CAAN,CAAuCH,IAAvC,CAA4C,CAA5C;AACD,GAFC,CAAF;AAIAH,EAAAA,EAAE,CAAC,iCAAD,EAAoC,MAAM;AAC1CC,IAAAA,MAAM,CAAC,+BAAI,aAAJ,EAAmBK,mBAApB,CAAN,CAA+CH,IAA/C,CAAoD,EAApD;AACD,GAFC,CAAF;AAGD,CA5CO,CAAR","sourcesContent":["import sut from \"./directionsParser\";\r\n\r\ndescribe(\"Directions Parser\", () => {\r\n  it('should parse \"(\" to 1', () => {\r\n    expect(sut(\"(\").endingFloor).toBe(1);\r\n  });\r\n\r\n  it('should parse \")\" to -1', () => {\r\n    expect(sut(\")\").endingFloor).toBe(-1);\r\n  });\r\n\r\n  it('should parse \"()\" to 0', () => {\r\n    expect(sut(\"()\").endingFloor).toBe(0);\r\n  });\r\n\r\n  it('should parse \")(\" to be 0', () => {\r\n    expect(sut(\")(\").endingFloor).toBe(0);\r\n  });\r\n\r\n  it(\"should be positive if more (\", () => {\r\n    expect(sut(\"((((((((((()))((((((((\").endingFloor).toBeGreaterThan(0);\r\n  });\r\n\r\n  it(\"should be negative if more )\", () => {\r\n    expect(sut(\"))))))))((())))))))))))))\").endingFloor).toBeLessThan(0);\r\n  });\r\n\r\n  it(\"parses ()()( to equal 1\", () => {\r\n    expect(sut(\"()()(\").endingFloor).toBe(1);\r\n  });\r\n\r\n  it(\"parses ()()) to equal -1\", () => {\r\n    expect(sut(\"()())\").endingFloor).toBe(-1);\r\n  });\r\n\r\n  it(\"should enter bottom floor at 1\", () => {\r\n    expect(sut(\")\").firstVisitsBasement).toBe(1);\r\n  });\r\n\r\n  it(\"should enter bottom floor at 3\", () => {\r\n    expect(sut(\"())\").firstVisitsBasement).toBe(3);\r\n  });\r\n\r\n  it(\"should enter bottom floor at 11\", () => {\r\n    expect(sut(\"((((())))))\").firstVisitsBasement).toBe(11);\r\n  });\r\n});\r\n"],"file":"directionsParser.test.js"}